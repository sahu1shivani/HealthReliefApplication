/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package userInterface.volunteer;

import Business.person.Feedback;
import Business.person.Volunteer;
import Business.userAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.RenderingHints;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anuja
 */
public class ViewFeedback extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount userAccount; 
    /**
     * Creates new form ViewFeedback
     */
    public ViewFeedback(JPanel userProcessContainer, UserAccount userAccount) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        
        populateFeedbackDynamically();
        populateFeedbackTable();
        viewFeedbackField.setVisible(false);
        feedbackHeadingLabel.setVisible(false);
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        int w = getWidth();
        int h = getHeight();
        
        Color c1 = new Color(204,204,255);
        Color c2 = Color.white;
     
        GradientPaint gp = new GradientPaint(w/4, 0, c2, w/4, h, c1);
        setOpaque( false );
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, w, h);
        setOpaque( true );
    }
    
    public void populateFeedbackDynamically()
    {
        feedbackJPanel.removeAll();
        feedbackJPanel.revalidate();
       Volunteer volunteer = (Volunteer)userAccount.getPerson();
       JTextArea textArea;
       JTextField txtField;
       int count = 0;
       int pos = 0;
           
        for(Feedback feedback : volunteer.getFeedbackList())
        {
            if(count<5)
            {
            
            txtField = new JTextField(feedback.getDate()+"Written By "+feedback.getAuthorName());
            txtField.setFont(new Font(Font.SANS_SERIF, Font.BOLD, 14));
            txtField.setEditable(false);
            txtField.setVisible(true);
            textArea = new JTextArea(feedback.getFeedbackText());
            textArea.setEditable(false);
            textArea.setVisible(true);
            count++;
             
            feedbackJPanel.setLayout(new GridLayout(10, 1,10,10));
            
            feedbackJPanel.add(txtField,pos);
            feedbackJPanel.add(textArea,++pos);
            ++pos;
            }
        }
        feedbackJPanel.revalidate();
        feedbackJPanel.setVisible(true);
       
    }
    
    public void populateFeedbackTable()
    {
     DefaultTableModel dtm = (DefaultTableModel)feedbackListJTable.getModel();
        dtm.setRowCount(0);
        
        Volunteer volunteer = (Volunteer)userAccount.getPerson();
        for(Feedback feedback : volunteer.getFeedbackList())
        {
         Object[] rowData = new Object[5];
           rowData[0] = feedback;
           rowData[1] = feedback.getAuthorName();   
           
           dtm.addRow(rowData);
        }   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        feedbackListJTable = new javax.swing.JTable();
        manageEnt = new javax.swing.JLabel();
        feedbackJPanel = new javax.swing.JPanel();
        viewFeedbackBtn = new javax.swing.JButton();
        feedbackHeadingLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewFeedbackField = new javax.swing.JTextArea();
        backJButton = new javax.swing.JButton();

        feedbackListJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Feedback Id", "Written By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(feedbackListJTable);

        manageEnt.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        manageEnt.setText("      View Feedback ");

        feedbackJPanel.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout feedbackJPanelLayout = new javax.swing.GroupLayout(feedbackJPanel);
        feedbackJPanel.setLayout(feedbackJPanelLayout);
        feedbackJPanelLayout.setHorizontalGroup(
            feedbackJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 504, Short.MAX_VALUE)
        );
        feedbackJPanelLayout.setVerticalGroup(
            feedbackJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 404, Short.MAX_VALUE)
        );

        viewFeedbackBtn.setText("View Feedback");
        viewFeedbackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewFeedbackBtnActionPerformed(evt);
            }
        });

        feedbackHeadingLabel.setText("jLabel1");

        viewFeedbackField.setEditable(false);
        viewFeedbackField.setColumns(20);
        viewFeedbackField.setRows(5);
        jScrollPane1.setViewportView(viewFeedbackField);

        backJButton.setText("Previous");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(feedbackHeadingLabel)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backJButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(viewFeedbackBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(feedbackJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
            .addGroup(layout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(manageEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(manageEnt)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(viewFeedbackBtn)
                        .addGap(28, 28, 28)
                        .addComponent(feedbackHeadingLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(feedbackJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)))
                .addComponent(backJButton)
                .addGap(14, 14, 14))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewFeedbackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewFeedbackBtnActionPerformed
        int selectedRow = feedbackListJTable.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(this, "Select row", "warning", JOptionPane.PLAIN_MESSAGE);
            return;
        }
        
         Feedback feedback = (Feedback)feedbackListJTable.getValueAt(selectedRow, 0);
         
         feedbackHeadingLabel.setText(feedback.getDate() + " written by "+feedback.getAuthorName() );
         viewFeedbackField.setText(feedback.getFeedbackText());
         feedbackHeadingLabel.setVisible(true);
         viewFeedbackField.setVisible(true);
        
    }//GEN-LAST:event_viewFeedbackBtnActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel feedbackHeadingLabel;
    private javax.swing.JPanel feedbackJPanel;
    private javax.swing.JTable feedbackListJTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel manageEnt;
    private javax.swing.JButton viewFeedbackBtn;
    private javax.swing.JTextArea viewFeedbackField;
    // End of variables declaration//GEN-END:variables
}
