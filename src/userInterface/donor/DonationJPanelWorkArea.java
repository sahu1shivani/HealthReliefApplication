/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package userInterface.donor;

import Business.EcoSystem;
import Business.common.Donation;
import Business.common.ValidateNumbers;
import Business.common.ValidatePhoneNumber;
import Business.common.ValidateStrings;
import Business.common.Validation;
import Business.Organization.ControllerOrganization;
import Business.userAccount.UserAccount;
import Business.workQueue.DonationRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author shivanisahu
 */
public class DonationJPanelWorkArea extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private EcoSystem ecoSystem;
   
    /**
     * Creates new form DonationJPanelWorkArea
     */
    public DonationJPanelWorkArea(JPanel userProcessContainer, UserAccount userAccount, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.ecoSystem = ecoSystem;
        addInputVerifiers();
        toAccntNumberField.setText(Donation.toAccountNumber);
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        int w = getWidth();
        int h = getHeight();
        
        Color c1 = new Color(153,255,255);
        Color c2 = Color.white;
     
        GradientPaint gp = new GradientPaint(w/4, 0, c2, w/4, h, c1);
        setOpaque( false );
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, w, h);
        setOpaque( true );
    }
    
      private void addInputVerifiers() {
        InputVerifier noValidation = new ValidateNumbers();
        amountField.setInputVerifier(noValidation);
        monthField.setInputVerifier(noValidation);
        yearField.setInputVerifier(noValidation);
        
        InputVerifier phnumberValidation = new ValidatePhoneNumber();
        cardNumberField.setInputVerifier(phnumberValidation);
        
         
        InputVerifier stringValidation = new ValidateStrings();
        nameTxtField.setInputVerifier(stringValidation);
       }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageEnt = new javax.swing.JLabel();
        helpName = new javax.swing.JLabel();
        cardNumberField = new javax.swing.JTextField();
        expiryDate = new javax.swing.JLabel();
        monthField = new javax.swing.JTextField();
        yearField = new javax.swing.JTextField();
        amount = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        submitBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        name = new javax.swing.JLabel();
        nameTxtField = new javax.swing.JTextField();
        toAccntNumber = new javax.swing.JLabel();
        toAccntNumberField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();

        manageEnt.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        manageEnt.setText("    Please Fund ");

        helpName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        helpName.setText("Card Number");

        expiryDate.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        expiryDate.setText("Expiry Date(MM/YYYY)");

        amount.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        amount.setText("Fees");

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Close");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        name.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        name.setText("Name");

        toAccntNumber.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        toAccntNumber.setText("Account Number To Be transferred to");

        toAccntNumberField.setEditable(false);
        toAccntNumberField.setBackground(new java.awt.Color(204, 255, 204));
        toAccntNumberField.setEnabled(false);

        backJButton.setText("Previous");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 315, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(helpName)
                    .addComponent(amount)
                    .addComponent(name)
                    .addComponent(expiryDate)
                    .addComponent(toAccntNumber))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(monthField, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toAccntNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(297, 297, 297))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(413, 413, 413)
                        .addComponent(manageEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(659, 659, 659)
                .addComponent(submitBtn)
                .addGap(18, 18, 18)
                .addComponent(cancelBtn)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(manageEnt)
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toAccntNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toAccntNumber))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(helpName)
                    .addComponent(cardNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(expiryDate)
                    .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amount)
                            .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelBtn)
                            .addComponent(submitBtn))
                        .addGap(15, 15, 15)))
                .addComponent(backJButton)
                .addGap(52, 52, 52))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
       if(nameTxtField.getText().trim().isEmpty() || 
               cardNumberField.getText().length()>10 || 
               monthField.getText().length()>2 || 
               yearField.getText().length()>4 || amountField.getText().length()<0)
       {
        JOptionPane.showMessageDialog(null, "Enter VALID input!", "warning",JOptionPane.WARNING_MESSAGE);
        return;       
       }
       try
       {
       int month = Integer.parseInt(monthField.getText());
       int year = Integer.parseInt(yearField.getText());
       if(month<0 || month > 12)
       {
       JOptionPane.showMessageDialog(null, "Enter proper month", "warning",JOptionPane.WARNING_MESSAGE);
        return;     
       }
       if(year<2015 || year>2050)
       {
        JOptionPane.showMessageDialog(null, "Enter VALID expiry year!", "warning",JOptionPane.WARNING_MESSAGE);
        return;       
       }
      
       DateFormat df = new SimpleDateFormat("EEE, MMM d, YYYY hh:mm aaa");
       Calendar cal = Calendar.getInstance();
       String timestamp = df.format(cal.getTime());
       
       Donation donation = userAccount.getPerson().addDonation();
       
       donation.setAmount(amountField.getText());
       donation.setDonationDate(timestamp);
       donation.setAccountName(nameTxtField.getText());
       donation.setAccountNumber(cardNumberField.getText());
      
           try
           {
           DonationRequest donationRequest = new DonationRequest();
           donationRequest.setDonation(donation);
           donationRequest.setDonatedBy(userAccount.getUserName());
           donationRequest.setSender(userAccount);
           donationRequest.setRequestDate(new Date());
           donationRequest.setMessage("Donated Money");
           
           userAccount.getWorkQueue().getWorkRequestList().add(donationRequest);
           
           UserAccount ua = getReliefManagerAccnt();
           if(ua==null)
           {
            JOptionPane.showMessageDialog(null, "Check if Relief Manager acccount exists!", "warning",JOptionPane.WARNING_MESSAGE);
           userAccount.getWorkQueue().getWorkRequestList().remove(donationRequest);  
            return;   
           }
           if(ua!=null)
           {
            donationRequest.setReceiver(ua);
            donationRequest.setResolveDate(new Date());
            ua.getWorkQueue().getWorkRequestList().add(donationRequest); 
            donationRequest.setStatus("Completed");
           JOptionPane.showMessageDialog(null, "Donation made successfully, Thank You", "success",JOptionPane.PLAIN_MESSAGE);
            }
           else
           {
           userAccount.getWorkQueue().getWorkRequestList().remove(donationRequest);  
           }
           }
           catch(Exception e)
            {
           JOptionPane.showMessageDialog(null, "check if Relief Manager acccount exists!", "warning",JOptionPane.WARNING_MESSAGE);
           return;      
            }
        resetFields();
      }
       catch(Exception e)
       {
      JOptionPane.showMessageDialog(null, "Enter VALID data!", "warning",JOptionPane.WARNING_MESSAGE);
       return;      
       }
    }//GEN-LAST:event_submitBtnActionPerformed
    
    public UserAccount getReliefManagerAccnt()
    {
        try
        {
        ControllerOrganization supervisorOrganization = (ControllerOrganization)Validation.getSupervisorOrganization(ecoSystem, userAccount);
        UserAccount mngrAccnt = null;
        if(supervisorOrganization==null)
        {
        JOptionPane.showMessageDialog(null, "Controller Organization does not exist!", "warning",JOptionPane.WARNING_MESSAGE);
        return mngrAccnt;  
        }
      
        for(UserAccount ua : supervisorOrganization.getUserAccountDirectory().getUserAccountList())
        {
            
         if((ua.getRole().toString()).equals("ReliefManagerRole"))  
         {
          mngrAccnt = ua;   
         }
        }
        return mngrAccnt;
        }
        catch(Exception e)
        {
        JOptionPane.showMessageDialog(null, "Check if Controller organization exist!", "warning",JOptionPane.WARNING_MESSAGE);
        
        return null;      
        }
   
    }
    
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
       resetFields();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    public void resetFields()
    {
     cardNumberField.setText("");
     monthField.setText("");
     yearField.setText("");
     amountField.setText("");
     nameTxtField.setText("");
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amount;
    private javax.swing.JTextField amountField;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField cardNumberField;
    private javax.swing.JLabel expiryDate;
    private javax.swing.JLabel helpName;
    private javax.swing.JLabel manageEnt;
    private javax.swing.JTextField monthField;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JButton submitBtn;
    private javax.swing.JLabel toAccntNumber;
    private javax.swing.JTextField toAccntNumberField;
    private javax.swing.JTextField yearField;
    // End of variables declaration//GEN-END:variables
}
